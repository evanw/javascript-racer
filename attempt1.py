# This was done by following https://www.tensorflow.org/versions/r0.7/tutorials/mnist/beginners/index.html.
# It doesn't work. The accuracy always sinks down to 0.148649 and then never changes after that.

import tensorflow as tf
import random
import numpy
import png
import os

images = [
  ('snapshot000.input=0.png', 1),
  ('snapshot001.input=0.png', 1),
  ('snapshot002.input=0.png', 1),
  ('snapshot003.input=0.png', 1),
  ('snapshot004.input=0.png', 1),
  ('snapshot005.input=0.png', 1),
  ('snapshot006.input=0.png', 1),
  ('snapshot007.input=0.png', 1),
  ('snapshot008.input=0.png', 1),
  ('snapshot009.input=0.png', 1),
  ('snapshot010.input=0.png', 1),
  ('snapshot011.input=0.png', 1),
  ('snapshot012.input=0.png', 1),
  ('snapshot013.input=0.png', 1),
  ('snapshot014.input=0.png', 1),
  ('snapshot015.input=0.png', 1),
  ('snapshot016.input=0.png', 1),
  ('snapshot017.input=0.png', 1),
  ('snapshot018.input=0.png', 1),
  ('snapshot019.input=0.png', 1),
  ('snapshot020.input=0.png', 1),
  ('snapshot021.input=0.png', 1),
  ('snapshot022.input=0.png', 1),
  ('snapshot023.input=0.png', 1),
  ('snapshot024.input=0.png', 1),
  ('snapshot025.input=0.png', 1),
  ('snapshot026.input=0.png', 1),
  ('snapshot027.input=0.png', 1),
  ('snapshot028.input=0.png', 1),
  ('snapshot029.input=0.png', 1),
  ('snapshot030.input=0.png', 1),
  ('snapshot031.input=0.png', 1),
  ('snapshot032.input=0.png', 1),
  ('snapshot033.input=0.png', 1),
  ('snapshot034.input=0.png', 1),
  ('snapshot035.input=0.png', 1),
  ('snapshot036.input=0.png', 1),
  ('snapshot037.input=0.png', 1),
  ('snapshot038.input=0.png', 1),
  ('snapshot039.input=0.png', 1),
  ('snapshot040.input=0.png', 1),
  ('snapshot041.input=0.png', 1),
  ('snapshot042.input=0.png', 1),
  ('snapshot043.input=0.png', 1),
  ('snapshot044.input=0.png', 1),
  ('snapshot045.input=0.png', 1),
  ('snapshot046.input=0.png', 1),
  ('snapshot047.input=0.png', 1),
  ('snapshot048.input=0.png', 1),
  ('snapshot049.input=0.png', 1),
  ('snapshot050.input=0.png', 1),
  ('snapshot051.input=0.png', 1),
  ('snapshot052.input=0.png', 1),
  ('snapshot053.input=0.png', 1),
  ('snapshot054.input=0.png', 1),
  ('snapshot055.input=0.png', 1),
  ('snapshot056.input=0.png', 1),
  ('snapshot057.input=0.png', 1),
  ('snapshot058.input=0.png', 1),
  ('snapshot059.input=0.png', 1),
  ('snapshot060.input=0.png', 1),
  ('snapshot061.input=0.png', 1),
  ('snapshot062.input=0.png', 1),
  ('snapshot063.input=0.png', 1),
  ('snapshot064.input=0.png', 1),
  ('snapshot065.input=0.png', 1),
  ('snapshot066.input=0.png', 1),
  ('snapshot067.input=0.png', 1),
  ('snapshot068.input=0.png', 1),
  ('snapshot069.input=0.png', 1),
  ('snapshot070.input=0.png', 1),
  ('snapshot071.input=0.png', 1),
  ('snapshot072.input=0.png', 1),
  ('snapshot073.input=0.png', 1),
  ('snapshot074.input=R.png', 2),
  ('snapshot075.input=R.png', 2),
  ('snapshot076.input=R.png', 2),
  ('snapshot077.input=R.png', 2),
  ('snapshot078.input=R.png', 2),
  ('snapshot079.input=R.png', 2),
  ('snapshot080.input=R.png', 2),
  ('snapshot081.input=R.png', 2),
  ('snapshot082.input=R.png', 2),
  ('snapshot083.input=R.png', 2),
  ('snapshot084.input=R.png', 2),
  ('snapshot085.input=R.png', 2),
  ('snapshot086.input=0.png', 1),
  ('snapshot087.input=0.png', 1),
  ('snapshot088.input=0.png', 1),
  ('snapshot089.input=0.png', 1),
  ('snapshot090.input=0.png', 1),
  ('snapshot091.input=0.png', 1),
  ('snapshot092.input=0.png', 1),
  ('snapshot093.input=0.png', 1),
  ('snapshot094.input=0.png', 1),
  ('snapshot095.input=0.png', 1),
  ('snapshot096.input=0.png', 1),
  ('snapshot097.input=0.png', 1),
  ('snapshot098.input=0.png', 1),
  ('snapshot099.input=0.png', 1),
  ('snapshot100.input=0.png', 1),
  ('snapshot101.input=0.png', 1),
  ('snapshot102.input=0.png', 1),
  ('snapshot103.input=0.png', 1),
  ('snapshot104.input=0.png', 1),
  ('snapshot105.input=0.png', 1),
  ('snapshot106.input=0.png', 1),
  ('snapshot107.input=0.png', 1),
  ('snapshot108.input=0.png', 1),
  ('snapshot109.input=0.png', 1),
  ('snapshot110.input=0.png', 1),
  ('snapshot111.input=0.png', 1),
  ('snapshot112.input=0.png', 1),
  ('snapshot113.input=0.png', 1),
  ('snapshot114.input=0.png', 1),
  ('snapshot115.input=0.png', 1),
  ('snapshot116.input=0.png', 1),
  ('snapshot117.input=0.png', 1),
  ('snapshot118.input=0.png', 1),
  ('snapshot119.input=0.png', 1),
  ('snapshot120.input=0.png', 1),
  ('snapshot121.input=0.png', 1),
  ('snapshot122.input=0.png', 1),
  ('snapshot123.input=0.png', 1),
  ('snapshot124.input=0.png', 1),
  ('snapshot125.input=0.png', 1),
  ('snapshot126.input=0.png', 1),
  ('snapshot127.input=0.png', 1),
  ('snapshot128.input=0.png', 1),
  ('snapshot129.input=0.png', 1),
  ('snapshot130.input=0.png', 1),
  ('snapshot131.input=0.png', 1),
  ('snapshot132.input=0.png', 1),
  ('snapshot133.input=0.png', 1),
  ('snapshot134.input=0.png', 1),
  ('snapshot135.input=0.png', 1),
  ('snapshot136.input=0.png', 1),
  ('snapshot137.input=0.png', 1),
  ('snapshot138.input=R.png', 2),
  ('snapshot139.input=0.png', 1),
  ('snapshot140.input=R.png', 2),
  ('snapshot141.input=R.png', 2),
  ('snapshot142.input=R.png', 2),
  ('snapshot143.input=R.png', 2),
  ('snapshot144.input=R.png', 2),
  ('snapshot145.input=R.png', 2),
  ('snapshot146.input=R.png', 2),
  ('snapshot147.input=R.png', 2),
  ('snapshot148.input=R.png', 2),
  ('snapshot149.input=R.png', 2),
  ('snapshot150.input=R.png', 2),
  ('snapshot151.input=R.png', 2),
  ('snapshot152.input=R.png', 2),
  ('snapshot153.input=R.png', 2),
  ('snapshot154.input=R.png', 2),
  ('snapshot155.input=R.png', 2),
  ('snapshot156.input=R.png', 2),
  ('snapshot157.input=R.png', 2),
  ('snapshot158.input=R.png', 2),
  ('snapshot159.input=R.png', 2),
  ('snapshot160.input=0.png', 1),
  ('snapshot161.input=0.png', 1),
  ('snapshot162.input=0.png', 1),
  ('snapshot163.input=0.png', 1),
  ('snapshot164.input=0.png', 1),
  ('snapshot165.input=0.png', 1),
  ('snapshot166.input=0.png', 1),
  ('snapshot167.input=0.png', 1),
  ('snapshot168.input=0.png', 1),
  ('snapshot169.input=0.png', 1),
  ('snapshot170.input=0.png', 1),
  ('snapshot171.input=0.png', 1),
  ('snapshot172.input=0.png', 1),
  ('snapshot173.input=0.png', 1),
  ('snapshot174.input=0.png', 1),
  ('snapshot175.input=0.png', 1),
  ('snapshot176.input=0.png', 1),
  ('snapshot177.input=0.png', 1),
  ('snapshot178.input=0.png', 1),
  ('snapshot179.input=0.png', 1),
  ('snapshot180.input=0.png', 1),
  ('snapshot181.input=0.png', 1),
  ('snapshot182.input=L.png', 0),
  ('snapshot183.input=L.png', 0),
  ('snapshot184.input=0.png', 1),
  ('snapshot185.input=L.png', 0),
  ('snapshot186.input=L.png', 0),
  ('snapshot187.input=L.png', 0),
  ('snapshot188.input=L.png', 0),
  ('snapshot189.input=L.png', 0),
  ('snapshot190.input=L.png', 0),
  ('snapshot191.input=L.png', 0),
  ('snapshot192.input=L.png', 0),
  ('snapshot193.input=L.png', 0),
  ('snapshot194.input=L.png', 0),
  ('snapshot195.input=L.png', 0),
  ('snapshot196.input=L.png', 0),
  ('snapshot197.input=L.png', 0),
  ('snapshot198.input=L.png', 0),
  ('snapshot199.input=L.png', 0),
  ('snapshot200.input=L.png', 0),
  ('snapshot201.input=L.png', 0),
  ('snapshot202.input=L.png', 0),
  ('snapshot203.input=L.png', 0),
  ('snapshot204.input=L.png', 0),
  ('snapshot205.input=0.png', 1),
  ('snapshot206.input=0.png', 1),
  ('snapshot207.input=0.png', 1),
  ('snapshot208.input=0.png', 1),
  ('snapshot209.input=0.png', 1),
  ('snapshot210.input=0.png', 1),
  ('snapshot211.input=0.png', 1),
  ('snapshot212.input=0.png', 1),
  ('snapshot213.input=0.png', 1),
  ('snapshot214.input=0.png', 1),
  ('snapshot215.input=0.png', 1),
  ('snapshot216.input=0.png', 1),
  ('snapshot217.input=0.png', 1),
  ('snapshot218.input=0.png', 1),
  ('snapshot219.input=0.png', 1),
  ('snapshot220.input=0.png', 1),
  ('snapshot221.input=0.png', 1),
  ('snapshot222.input=0.png', 1),
  ('snapshot223.input=0.png', 1),
  ('snapshot224.input=0.png', 1),
  ('snapshot225.input=0.png', 1),
  ('snapshot226.input=0.png', 1),
  ('snapshot227.input=0.png', 1),
  ('snapshot228.input=0.png', 1),
  ('snapshot229.input=0.png', 1),
  ('snapshot230.input=0.png', 1),
  ('snapshot231.input=0.png', 1),
  ('snapshot232.input=0.png', 1),
  ('snapshot233.input=0.png', 1),
  ('snapshot234.input=0.png', 1),
  ('snapshot235.input=0.png', 1),
  ('snapshot236.input=0.png', 1),
  ('snapshot237.input=0.png', 1),
  ('snapshot238.input=0.png', 1),
  ('snapshot239.input=0.png', 1),
  ('snapshot240.input=0.png', 1),
  ('snapshot241.input=0.png', 1),
  ('snapshot242.input=0.png', 1),
  ('snapshot243.input=R.png', 2),
  ('snapshot244.input=0.png', 1),
  ('snapshot245.input=R.png', 2),
  ('snapshot246.input=R.png', 2),
  ('snapshot247.input=R.png', 2),
  ('snapshot248.input=R.png', 2),
  ('snapshot249.input=R.png', 2),
  ('snapshot250.input=R.png', 2),
  ('snapshot251.input=R.png', 2),
  ('snapshot252.input=R.png', 2),
  ('snapshot253.input=R.png', 2),
  ('snapshot254.input=R.png', 2),
  ('snapshot255.input=R.png', 2),
  ('snapshot256.input=R.png', 2),
  ('snapshot257.input=R.png', 2),
  ('snapshot258.input=R.png', 2),
  ('snapshot259.input=R.png', 2),
  ('snapshot260.input=R.png', 2),
  ('snapshot261.input=R.png', 2),
  ('snapshot262.input=R.png', 2),
  ('snapshot263.input=R.png', 2),
  ('snapshot264.input=R.png', 2),
  ('snapshot265.input=0.png', 1),
  ('snapshot266.input=0.png', 1),
  ('snapshot267.input=0.png', 1),
  ('snapshot268.input=0.png', 1),
  ('snapshot269.input=0.png', 1),
  ('snapshot270.input=0.png', 1),
  ('snapshot271.input=0.png', 1),
  ('snapshot272.input=0.png', 1),
  ('snapshot273.input=0.png', 1),
  ('snapshot274.input=0.png', 1),
  ('snapshot275.input=0.png', 1),
  ('snapshot276.input=0.png', 1),
  ('snapshot277.input=0.png', 1),
  ('snapshot278.input=0.png', 1),
  ('snapshot279.input=0.png', 1),
  ('snapshot280.input=0.png', 1),
  ('snapshot281.input=0.png', 1),
  ('snapshot282.input=0.png', 1),
  ('snapshot283.input=0.png', 1),
  ('snapshot284.input=0.png', 1),
  ('snapshot285.input=0.png', 1),
  ('snapshot286.input=0.png', 1),
  ('snapshot287.input=0.png', 1),
  ('snapshot288.input=0.png', 1),
  ('snapshot289.input=0.png', 1),
  ('snapshot290.input=0.png', 1),
  ('snapshot291.input=0.png', 1),
  ('snapshot292.input=0.png', 1),
  ('snapshot293.input=0.png', 1),
  ('snapshot294.input=0.png', 1),
  ('snapshot295.input=0.png', 1),
  ('snapshot296.input=0.png', 1),
  ('snapshot297.input=0.png', 1),
  ('snapshot298.input=0.png', 1),
  ('snapshot299.input=0.png', 1),
  ('snapshot300.input=0.png', 1),
  ('snapshot301.input=0.png', 1),
  ('snapshot302.input=0.png', 1),
  ('snapshot303.input=0.png', 1),
  ('snapshot304.input=0.png', 1),
  ('snapshot305.input=0.png', 1),
  ('snapshot306.input=0.png', 1),
  ('snapshot307.input=0.png', 1),
  ('snapshot308.input=0.png', 1),
  ('snapshot309.input=0.png', 1),
  ('snapshot310.input=0.png', 1),
  ('snapshot311.input=0.png', 1),
  ('snapshot312.input=0.png', 1),
  ('snapshot313.input=0.png', 1),
  ('snapshot314.input=0.png', 1),
  ('snapshot315.input=0.png', 1),
  ('snapshot316.input=0.png', 1),
  ('snapshot317.input=0.png', 1),
  ('snapshot318.input=L.png', 0),
  ('snapshot319.input=0.png', 1),
  ('snapshot320.input=0.png', 1),
  ('snapshot321.input=0.png', 1),
  ('snapshot322.input=0.png', 1),
  ('snapshot323.input=0.png', 1),
  ('snapshot324.input=L.png', 0),
  ('snapshot325.input=0.png', 1),
  ('snapshot326.input=0.png', 1),
  ('snapshot327.input=L.png', 0),
  ('snapshot328.input=L.png', 0),
  ('snapshot329.input=0.png', 1),
  ('snapshot330.input=0.png', 1),
  ('snapshot331.input=L.png', 0),
  ('snapshot332.input=L.png', 0),
  ('snapshot333.input=L.png', 0),
  ('snapshot334.input=L.png', 0),
  ('snapshot335.input=L.png', 0),
  ('snapshot336.input=L.png', 0),
  ('snapshot337.input=L.png', 0),
  ('snapshot338.input=L.png', 0),
  ('snapshot339.input=L.png', 0),
  ('snapshot340.input=L.png', 0),
  ('snapshot341.input=L.png', 0),
  ('snapshot342.input=L.png', 0),
  ('snapshot343.input=L.png', 0),
  ('snapshot344.input=L.png', 0),
  ('snapshot345.input=L.png', 0),
  ('snapshot346.input=L.png', 0),
  ('snapshot347.input=L.png', 0),
  ('snapshot348.input=L.png', 0),
  ('snapshot349.input=L.png', 0),
  ('snapshot350.input=L.png', 0),
  ('snapshot351.input=L.png', 0),
  ('snapshot352.input=L.png', 0),
  ('snapshot353.input=L.png', 0),
  ('snapshot354.input=L.png', 0),
  ('snapshot355.input=0.png', 1),
  ('snapshot356.input=L.png', 0),
  ('snapshot357.input=L.png', 0),
  ('snapshot358.input=0.png', 1),
  ('snapshot359.input=0.png', 1),
  ('snapshot360.input=0.png', 1),
  ('snapshot361.input=L.png', 0),
  ('snapshot362.input=0.png', 1),
  ('snapshot363.input=0.png', 1),
  ('snapshot364.input=L.png', 0),
  ('snapshot365.input=0.png', 1),
  ('snapshot366.input=0.png', 1),
  ('snapshot367.input=0.png', 1),
  ('snapshot368.input=L.png', 0),
  ('snapshot369.input=0.png', 1),
]

def mkdir(path):
  try:
    os.makedirs(path)
  except OSError:
    pass

def load_image(path):
  print 'loading:', path

  source = 'snapshots/' + path
  cache = 'cache/' + path.replace('.png', '.npy')
  mkdir('cache')

  if os.path.exists(cache):
    numbers = numpy.load(cache)
  else:
    reader = png.Reader(file=open(source, 'rb'))
    width, height, pixels, meta = reader.asDirect()
    numbers = numpy.array([x / 255.0 for row in pixels for x in row])
    numpy.save(cache, numbers)

  return numbers

width = 480
height = 360

images = [(load_image(path), kind) for path, kind in images]

x = tf.placeholder(tf.float32, shape=[None, width * height], name='x')

W = tf.Variable(tf.zeros([width * height, 3]))
b = tf.Variable(tf.zeros([3]))

y = tf.nn.softmax(tf.matmul(x, W) + b)
y_ = tf.placeholder(tf.float32, [None, 3], name='y_')

cross_entropy = -tf.reduce_sum(y_ * tf.log(y))
train_step = tf.train.GradientDescentOptimizer(0.01).minimize(cross_entropy)

sess = tf.Session()
sess.run(tf.initialize_all_variables())

correct_prediction = tf.equal(tf.argmax(y, 1), tf.argmax(y_, 1))
accuracy = tf.reduce_mean(tf.cast(correct_prediction, tf.float32))

kinds = [
  [1.0, 0.0, 0.0],
  [0.0, 1.0, 0.0],
  [0.0, 0.0, 1.0],
]

all_xs = [image for image, kind in images]
all_ys = [kinds[kind] for image, kind in images]

for i in range(1000):
  print 'iteration:', i
  batch = random.sample(images, 100)
  batch_xs = [image for image, kind in batch]
  batch_ys = [kinds[kind] for image, kind in batch]
  sess.run(train_step, feed_dict={x: batch_xs, y_: batch_ys})
  print 'accuracy:', sess.run(accuracy, feed_dict={x: all_xs, y_: all_ys})

print 'done'
